From 97c15c842fb61eefd0849d9750d46e91f308754a Mon Sep 17 00:00:00 2001
From: Markus Kappeler <markus.kappeler@bytesatwork.ch>
Date: Wed, 14 Jan 2015 07:21:21 +0100
Subject: [PATCH 3/3] bytepanel-et10: add definitions for EDT 10.1" display

---
 arch/arm/boot/dts/bytepanel-et10.dts |  145 ++++++++++++++++++++++++++++++++++
 arch/arm/boot/dts/bytepanel.dtsi     |   11 +++
 arch/arm/mach-omap2/pm33xx.c         |    2 +
 3 files changed, 158 insertions(+)
 create mode 100644 arch/arm/boot/dts/bytepanel-et10.dts

diff --git a/arch/arm/boot/dts/bytepanel-et10.dts b/arch/arm/boot/dts/bytepanel-et10.dts
new file mode 100644
index 0000000..7b306ed
--- /dev/null
+++ b/arch/arm/boot/dts/bytepanel-et10.dts
@@ -0,0 +1,145 @@
+/*
+ * Copyright (C) 2015 Bytes at Work - http://www.bytesatwork.ch
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+/dts-v1/;
+
+#include "bytepanel.dtsi"
+
+/ {
+	model = "bytePanel ETML101000DH";
+	compatible = "batw,bytepanel-etml101000dh", "batw,bytepanel", "batw,m2", "ti,am33xx";
+
+	etm043080adh6 {
+		compatible = "ti,tilcdc,panel";
+		status = "okay";
+		pinctrl-names = "default";
+		pinctrl-0 = <&lcd_pins_s0>;
+
+		panel-info {
+			ac-bias           = <255>;
+			ac-bias-intrpt    = <0>;
+			dma-burst-sz      = <16>;
+			bpp               = <32>;
+			fdd               = <0x80>;
+			sync-edge         = <0>;
+			sync-ctrl         = <1>;
+			raster-order      = <0>;
+			fifo-th           = <0>;
+		};
+
+		display-timings {
+			native-mode = <&timing0>;
+			timing0: 1024x600 {
+				clock-frequency	= <51200000>;
+				hactive		= <1024>;
+				vactive		= <600>;
+				hfront-porch	= <127>;
+				hback-porch	= <127>;
+				hsync-len	= <31>;
+				vfront-porch	= <35>;
+				vback-porch	= <0>;
+				vsync-len	= <0>;
+				hsync-active	= <0>;
+				vsync-active	= <0>;
+			};
+		};
+	};
+
+	// FIXME: set pins not as LED; use a muxer or so
+	dispconf {
+		compatible = "gpio-leds";
+		status = "okay";
+		pinctrl-names = "default";
+		pinctrl-0 = <&display_config>;
+
+		lcd_data_enable {
+			gpios = <&gpio1 25 1>;
+			default-state = "on";
+		};
+
+		lcd_lvds_shutdown {
+			gpios = <&gpio1 26 1>;
+			default-state = "on";
+		};
+
+		lcd_panel_pwr {
+			gpios = <&gpio1 20 0>;
+			default-state = "on";
+		};
+	};
+};
+
+&am33xx_pinmux {
+	// ---- Display ----
+	lcd_pins_s0: lcd_pins_s0 {
+		pinctrl-single,pins = <
+			PIN_LCD_DATA0		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA1		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA2		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA3		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA4		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA5		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA6		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA7		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA8		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA9		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA10		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA11		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA12		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA13		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA14		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_DATA15		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_GPMC_AD8		(MUX_MODE1 | PIN_OUTPUT)	// lcd_data16
+			PIN_GPMC_AD9		(MUX_MODE1 | PIN_OUTPUT)	// lcd_data17
+			PIN_GPMC_AD10		(MUX_MODE1 | PIN_OUTPUT)	// lcd_data18
+			PIN_GPMC_AD11		(MUX_MODE1 | PIN_OUTPUT)	// lcd_data19
+			PIN_GPMC_AD12		(MUX_MODE1 | PIN_OUTPUT)	// lcd_data20
+			PIN_GPMC_AD13		(MUX_MODE1 | PIN_OUTPUT)	// lcd_data21
+			PIN_GPMC_AD14		(MUX_MODE1 | PIN_OUTPUT)	// lcd_data22
+			PIN_GPMC_AD15		(MUX_MODE1 | PIN_OUTPUT)	// lcd_data23
+			PIN_LCD_VSYNC		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_HSYNC		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_PCLK		(MUX_MODE0 | PIN_OUTPUT)
+			PIN_LCD_AC_BIAS_EN	(MUX_MODE0 | PIN_OUTPUT)
+		>;
+	};
+
+	// ---- Touch ----
+	touch_pins: pinmux_touch_pins {
+		pinctrl-single,pins = <
+			PIN_GPMC_A7		(MUX_MODE7 | PIN_INPUT_PULLUP)	// gpio1_23 /wake
+			PIN_GPMC_A8		(MUX_MODE7 | PIN_INPUT_PULLUP)	// gpio1_24 /int
+		>;
+	};
+};
+
+// ---- Display ----
+&lcdc {
+	status = "okay";
+};
+
+// ---- Backlight ----
+&epwmss0 {
+	status = "okay";
+};
+
+&i2c1 {
+	touch: edt-ft5306@38 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&touch_pins>;
+
+		compatible = "edt,edt-ft5306";
+		reg = <0x38>;
+		interrupt-parent = <&gpio1>;
+		interrupts = <24 0>;
+		wake-gpios = <&gpio1 23 1>;
+
+		force-num_x = <20>;
+		force-num_y = <12>;
+	};
+};
+
diff --git a/arch/arm/boot/dts/bytepanel.dtsi b/arch/arm/boot/dts/bytepanel.dtsi
index 89be980a..a49c306 100644
--- a/arch/arm/boot/dts/bytepanel.dtsi
+++ b/arch/arm/boot/dts/bytepanel.dtsi
@@ -56,6 +56,17 @@
 		>;
 	};
 
+	// ---- UART1 ---
+	uart1_pins: uart1_pins {
+		    pinctrl-single,pins = <
+			    0x178 (PIN_OUTPUT | MUX_MODE7)          /* uart1_ctsn.uart1_ctsn */
+			    0x17c (PIN_OUTPUT | MUX_MODE7)          /* uart1_rtsn.uart1_rtsn */
+			    0x180 (PIN_INPUT_PULLUP | MUX_MODE0)    /* uart1_rxd.uart1_rxd */
+			    0x184 (PIN_OUTPUT | MUX_MODE0)          /* uart1_txd.uart1_txd */
+			    >;
+	};
+
+
 	// ---- ETHERNET on X8 ----
 	cpsw_default: cpsw_default {
 		pinctrl-single,pins = <
diff --git a/arch/arm/mach-omap2/pm33xx.c b/arch/arm/mach-omap2/pm33xx.c
index 15a2851..a04a285 100644
--- a/arch/arm/mach-omap2/pm33xx.c
+++ b/arch/arm/mach-omap2/pm33xx.c
@@ -761,12 +761,14 @@ int __init am33xx_pm_init(void)
 
 	(void) clkdm_for_each(omap_pm_clkdms_setup, NULL);
 
+#ifdef CONFIG_SUSPEND
 	/* CEFUSE domain can be turned off post bootup */
 	cefuse_pwrdm = pwrdm_lookup("cefuse_pwrdm");
 	if (cefuse_pwrdm)
 		omap_set_pwrdm_state(cefuse_pwrdm, PWRDM_POWER_OFF);
 	else
 		pr_err("PM: Failed to get cefuse_pwrdm\n");
+#endif
 
 	rtc_oh = omap_hwmod_lookup("rtc");
 	if (!rtc_oh) {
-- 
1.7.10.4

